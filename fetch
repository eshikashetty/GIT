//index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My PWA App</title>
  <link rel="manifest" href="/manifest.json">
</head>
<body>
  <h1>Welcome to My PWA push and fetch App!</h1>
  <!-- Your app content goes here -->
  
  <script>
    if ('serviceWorker' in navigator) {
      window.addEventListener('load', () => {
        navigator.serviceWorker.register('/service-worker.js')
          .then(registration => {
            console.log('Service Worker registered with scope:', registration.scope);
          })
          .catch(error => {
            console.error('Service Worker registration failed:', error);
          });
      });
    }

    Notification.requestPermission().then(permission => {
      if (permission === 'granted') {
        // Notification permission granted
        // You can now subscribe to push notifications
      }
    });
  </script>
</body>
</html>
//styles.css
body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f0f0f0;
}

.container {
  max-width: 800px;
  margin: 0 auto;
  padding: 20px;
}

h1 {
  color: #333;
}

p {
  color: #666;
}
//service-worker.js
const CACHE_NAME = 'my-pwa-cache-v1';
const urlsToCache = [
  '/',
  '/index.html',
  '/styles.css',
  '/app.js',
  '/image.png'
];

self.addEventListener('install', event => {
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then(cache => cache.addAll(urlsToCache))
  );
});

self.addEventListener('fetch', event => {
  event.respondWith(
    caches.match(event.request)
      .then(response => {
        if (response) {
          return response;
        }
        return fetch(event.request);
      })
  );
});

self.addEventListener('push', event => {
  const title = 'Push Notification';
  const options = {
    body: event.data.text()
  };
  event.waitUntil(
    self.registration.showNotification(title, options)
  );
});
//app.js
console.log('Page loaded');

// Sample function to fetch data
function fetchData() {
  fetch('https://holidays.abstractapi.com/v1/?api_key=14729428e1c243a3b37a1c3c52a56db6&country=US&year=2020&month=12&day=25')
    .then(response => response.json())
    .then(data => {
      console.log('Data:', data);
      // Handle data
    })
    .catch(error => {
      console.error('Error fetching data:', error);
    });
}

// Call fetchData function when the page loads
window.addEventListener('load', fetchData);
//manifest.json
{
  "name": "My PWA App",
  "short_name": "My App",
  "start_url": "/",
  "display": "standalone",
  "icons": [
    {
      "src": "/image.png",
      "sizes": "192x192",
      "type": "image/png"
    }
  ]
}
